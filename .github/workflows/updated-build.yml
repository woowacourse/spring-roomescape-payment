name: Build and Deploy

on:
  push:
    branches: step2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build project using Gradle
        run: ./gradlew clean bootJar

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: spring-roomescape-payment-jar
          path: build/libs/spring-roomescape-payment-0.0.1-SNAPSHOT.jar

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: spring-roomescape-payment-jar
          path: ./build/libs

      - name: Check if room-esc server is running on port 8080
        id: check-server-on-port
        run: |
          echo "Checking if port 8080 is in use..."
          PID=$(lsof -t -i:8080 || true)
          if [ -n "$PID" ]; then
            echo "server_running=true" >> $GITHUB_ENV
            echo "PID=$PID" >> $GITHUB_ENV
          else
            echo "server_running=false" >> $GITHUB_ENV
          fi

      - name: Stop server if running
        if: env.server_running == 'true'
        run: |
          echo "Stopping server running on port 8080..."
          kill -9 $PID
          echo "Server stopped."

      - name: Start server
        run: |
          RUNNER_TRACKING_ID="" && nohup java -jar build/libs/spring-roomescape-payment-0.0.1-SNAPSHOT.jar > server.log 2>&1 &
          echo "Waiting for server to start..."
          timeout=300  # 최대 대기 시간 (초)
          elapsed=0
          while ! grep -q 'Tomcat started on port 8080' server.log; do
            if [ $elapsed -ge $timeout ]; then
              echo "Timeout waiting for server to start"
              cat server.log
              exit 1
            fi
            sleep 5
            elapsed=$((elapsed + 5))
          done
          echo "Server started successfully and is listening on port 8080"
